@import url(../libs/normalize.css/normalize.css);
@import url(../libs/animate.css/animate.css);
.animated {
  -webkit-animation-duration: 1s;
  animation-duration: 1s;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both; }

.animated.hinge {
  -webkit-animation-duration: 2s;
  animation-duration: 2s; }

.animated.infinite {
  -webkit-animation-iteration-count: infinite;
  animation-iteration-count: infinite; }

.duration-0s {
  animation-duration: 0s; }

.delay-0s {
  animation-delay: 0s; }

.iteration-0 {
  animation-iteration-count: 0; }

.duration-1s {
  animation-duration: 1s; }

.delay-1s {
  animation-delay: 1s; }

.iteration-1 {
  animation-iteration-count: 1; }

.duration-2s {
  animation-duration: 2s; }

.delay-2s {
  animation-delay: 2s; }

.iteration-2 {
  animation-iteration-count: 2; }

.duration-3s {
  animation-duration: 3s; }

.delay-3s {
  animation-delay: 3s; }

.iteration-3 {
  animation-iteration-count: 3; }

.duration-4s {
  animation-duration: 4s; }

.delay-4s {
  animation-delay: 4s; }

.iteration-4 {
  animation-iteration-count: 4; }

.duration-5s {
  animation-duration: 5s; }

.delay-5s {
  animation-delay: 5s; }

.iteration-5 {
  animation-iteration-count: 5; }

.duration-6s {
  animation-duration: 6s; }

.delay-6s {
  animation-delay: 6s; }

.iteration-6 {
  animation-iteration-count: 6; }

.duration-7s {
  animation-duration: 7s; }

.delay-7s {
  animation-delay: 7s; }

.iteration-7 {
  animation-iteration-count: 7; }

.duration-8s {
  animation-duration: 8s; }

.delay-8s {
  animation-delay: 8s; }

.iteration-8 {
  animation-iteration-count: 8; }

.duration-9s {
  animation-duration: 9s; }

.delay-9s {
  animation-delay: 9s; }

.iteration-9 {
  animation-iteration-count: 9; }

.duration-10s {
  animation-duration: 10s; }

.delay-10s {
  animation-delay: 10s; }

.iteration-10 {
  animation-iteration-count: 10; }

.iteration-infinite {
  animation-iteration-count: infinite; }

.clearfix:before, .features .row-2:before, .features .row-3:before, .features .row-4:before, .features .row-5:before, .clearfix:after, .features .row-2:after, .features .row-3:after, .features .row-4:after, .features .row-5:after {
  display: block;
  content: "";
  visibility: hidden;
  clear: both; }

.col-1 {
  width: 10%;
  float: left; }

.col-2 {
  width: 20%;
  float: left; }

.col-3 {
  width: 30%;
  float: left; }

.col-4 {
  width: 40%;
  float: left; }

.col-5 {
  width: 50%;
  float: left; }

.col-6 {
  width: 60%;
  float: left; }

.col-7 {
  width: 70%;
  float: left; }

.col-8 {
  width: 80%;
  float: left; }

.col-9 {
  width: 90%;
  float: left; }

.col-10 {
  width: 100%;
  float: left; }

body {
  color: #fff;
  text-align: center; }

.page {
  position: relative; }

.features {
  position: absolute;
  width: 100%;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%); }

.features .row-2 .feature {
  width: 50%;
  float: left; }
.features .row-3 .feature {
  width: 33%;
  float: left; }
.features .row-4 .feature {
  width: 25%;
  float: left; }
.features .row-5 .feature {
  width: 20%;
  float: left; }

.feature {
  position: relative; }
  .feature .center {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%;
    margin: 0;
    padding: 0;
    transform: translate(-50%, -50%);
    text-align: center; }

.example-page-index .brand {
  width: 100%; }
.example-page-index .title {
  position: absolute;
  bottom: 0;
  width: 100%;
  margin: 2em auto;
  font-size: 1.5em;
  color: #fff;
  text-align: center; }
.example-page-index .features {
  width: 360px;
  height: 360px; }
.example-page-index .feature {
  position: absolute;
  width: 120px;
  height: 120px; }
  .example-page-index .feature:nth-child(1) {
    top: 25%;
    left: 25%;
    margin-top: -60px;
    margin-left: -60px; }
  .example-page-index .feature:nth-child(2) {
    top: 25%;
    left: 75%;
    margin-top: -60px;
    margin-left: -60px; }
  .example-page-index .feature:nth-child(3) {
    z-index: 2;
    top: 50%;
    left: 50%;
    margin-top: -60px;
    margin-left: -60px;
    border-radius: 50%; }
  .example-page-index .feature:nth-child(4) {
    top: 75%;
    left: 25%;
    margin-top: -60px;
    margin-left: -60px; }
  .example-page-index .feature:nth-child(5) {
    top: 75%;
    left: 75%;
    margin-top: -60px;
    margin-left: -60px; }

.example-page-list-1 .feature {
  height: 150px; }

.example-page-list-2 .feature {
  height: 100px; }

.example-page-contact .features {
  position: relative;
  height: 100%; }
.example-page-contact .feature {
  position: absolute;
  width: 100px;
  height: 100px; }
  .example-page-contact .feature:nth-child(1) {
    right: 0;
    transform: rotate(-30deg); }
  .example-page-contact .feature:nth-child(2) {
    top: 150px;
    left: 0; }
  .example-page-contact .feature:nth-child(3) {
    top: 400px;
    left: 100px;
    transform: rotate(-20deg); }
  .example-page-contact .feature.text {
    top: 150px;
    left: 150px;
    width: 200px;
    height: 200px;
    line-height: 2;
    transform: rotate(45deg) translate(-10px, 0); }
    .example-page-contact .feature.text ul {
      list-style: none;
      margin: 0;
      padding: 0;
      transform: rotate(-45deg) translate(-20px, 30px); }
  .example-page-contact .feature img {
    max-width: 100%; }
.example-page-contact .contact {
  position: absolute;
  bottom: 20px;
  width: 100%; }
  .example-page-contact .contact a {
    color: inherit;
    font-size: 2em;
    text-decoration: none; }

* {
  box-sizing: border-box; }

body {
  font-family: "Helvetica Neue", Helvetica, STHeiTi, sans-serif; }

.pages {
  overflow: hidden; }

.page {
  display: none;
  width: 100%;
  height: 100%;
  transition: all 1s ease; }
  .page.active {
    display: block; }
    .page.active.up {
      animation: up 200ms ease; }
    .page.active.down {
      animation: down 200ms ease; }
    .page.active.left {
      animation: left 200ms ease; }
    .page.active.right {
      animation: right 200ms ease; }

@keyframes page {
  from {
    transform: scale(0); }

  to {
    transform: scale(1); } }

@keyframes opacity {
  from {
    opacity: 0; }

  to {
    opacity: 1; } }

@keyframes right {
  from {
    transform: translateX(-100%); }

  to {
    transform: translateX(0); } }

@keyframes left {
  from {
    transform: translateX(100%); }

  to {
    transform: translateX(0); } }

@keyframes down {
  from {
    transform: translateY(-100%); }

  to {
    transform: translateY(0); } }

@keyframes up {
  from {
    transform: translateY(100%); }

  to {
    transform: translateY(0); } }
